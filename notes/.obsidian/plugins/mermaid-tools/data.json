{
  "categories": {
    "Flowchart": "Flowchart",
    "SequenceDiagram": "SequenceDiagram",
    "ClassDiagram": "ClassDiagram",
    "StateDiagram": "StateDiagram",
    "EntityRelationshipDiagram": "EntityRelationshipDiagram",
    "UserJourneyDiagram": "UserJourneyDiagram",
    "GanttChart": "GanttChart",
    "PieChart": "PieChart",
    "RequirementDiagram": "RequirementDiagram",
    "GitGraph": "GitGraph",
    "Mindmap": "Mindmap",
    "Timeline": "Timeline",
    "C4Diagram": "C4Diagram",
    "QuadrantChart": "QuadrantChart",
    "SankeyDiagram": "SankeyDiagram",
    "XyChart": "XyChart"
  },
  "elements": [
    {
      "id": "1a46f2d6-686d-4705-bfc6-0f9546cb5645",
      "category": "Flowchart",
      "description": "a simple flowchart with top to down direction",
      "content": "flowchart TD\nStart --> Stop",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "ba15e028-d036-4d87-b891-1b2f95cd4f09",
      "category": "Flowchart",
      "description": "a simple flowchart with left to right direction",
      "content": "flowchart LR\nStart --> Stop",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "4e7db8a8-a6f0-4423-97b7-663f2412abd4",
      "category": "Flowchart",
      "description": "A node with round edges",
      "content": "id1(Some text)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "a34b61ef-ebb1-4452-8fe5-71eb51689320",
      "category": "Flowchart",
      "description": "A stadium-shaped node",
      "content": "id1([Some text])",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "8e5a9386-6f19-43e0-aea1-77ff7f79caeb",
      "category": "Flowchart",
      "description": "A node in a cylindrical shape",
      "content": "id1[(Database)]",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "b461045f-925c-4230-8dcc-0a752278900e",
      "category": "Flowchart",
      "description": "Circle",
      "content": "id1((Some text))",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "a736c0a9-567d-4988-8f7c-82b42024a1dc",
      "category": "Flowchart",
      "description": "Rhombus",
      "content": "id1{Some text}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "341dae4f-a42a-4281-9d6b-5f41f17050f5",
      "category": "Flowchart",
      "description": "Hexagon",
      "content": "id1{{Some text}}",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "172520c9-3118-4725-b487-4b5aac7a0c24",
      "category": "Flowchart",
      "description": "Parallelogram skewed right",
      "content": "id1[/Some text/]",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "406c8e92-351e-4c71-90f9-859b86e266eb",
      "category": "Flowchart",
      "description": "Parallelogram skewed left",
      "content": "id1[\\Some text\\]",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "6cf6d1b9-f704-4f12-ae86-ead042dad752",
      "category": "Flowchart",
      "description": "Trapezoid",
      "content": "A[/Some text\\]",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "fff3dccf-9f9c-4d87-ae3e-7be53bc4282d",
      "category": "Flowchart",
      "description": "Trapezoid upside down",
      "content": "A[\\Some text/]",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "cd9cef0a-db9b-4eba-9a5e-24e5e5a84296",
      "category": "Flowchart",
      "description": "Double circle node",
      "content": "id1(((Some text)))",
      "sortingOrder": 13,
      "isPinned": false
    },
    {
      "id": "bb051e13-641a-40ec-a2fb-d0fe22d8642e",
      "category": "Flowchart",
      "description": "A link with arrow head",
      "content": "A-->B",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "3e3b6a92-61c0-4be8-bd88-8a87cdeddfe7",
      "category": "Flowchart",
      "description": "An open link",
      "content": "A --- B",
      "sortingOrder": 15,
      "isPinned": false
    },
    {
      "id": "5dcb3fb1-2997-4ee2-9b44-d9411fb6664f",
      "category": "Flowchart",
      "description": "Text on links",
      "content": "A-- This is the text! ---B",
      "sortingOrder": 16,
      "isPinned": false
    },
    {
      "id": "6478abf0-d5bc-40e9-8199-53b8b08e7018",
      "category": "Flowchart",
      "description": "A link with arrow head and text",
      "content": "A-->|text|B",
      "sortingOrder": 17,
      "isPinned": false
    },
    {
      "id": "0361ab80-f728-4b18-a182-5de4771234ed",
      "category": "Flowchart",
      "description": "Dotted link",
      "content": "A-.->B",
      "sortingOrder": 18,
      "isPinned": false
    },
    {
      "id": "383d65b0-82eb-4015-8e56-1b4f1f7604d2",
      "category": "Flowchart",
      "description": "Thick link",
      "content": "A ==> B",
      "sortingOrder": 19,
      "isPinned": false
    },
    {
      "id": "f3645e2f-14b7-4037-9fc9-08474c9a0ab9",
      "category": "Flowchart",
      "description": "Invisible link",
      "content": "A ~~~ B",
      "sortingOrder": 20,
      "isPinned": false
    },
    {
      "id": "e34bb4cf-5db1-4138-9956-2ff58cafd98b",
      "category": "Flowchart",
      "description": "Link with circle edge",
      "content": "A --o B",
      "sortingOrder": 21,
      "isPinned": false
    },
    {
      "id": "f790fb74-7690-4c4f-acf1-2548f3e82768",
      "category": "Flowchart",
      "description": "Link with cross edge",
      "content": "A --x B",
      "sortingOrder": 22,
      "isPinned": false
    },
    {
      "id": "8e7e74f4-c4df-440e-aeab-bfc615409359",
      "category": "Flowchart",
      "description": "Subgraph",
      "content": "subgraph one\na1-->a2\nend",
      "sortingOrder": 14,
      "isPinned": false
    },
    {
      "id": "01bc7c7f-721b-4df0-af72-283cff43d8cf",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram",
      "content": "sequenceDiagram\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "c12bb81d-f979-40aa-b88f-47bb47ef05f4",
      "category": "SequenceDiagram",
      "description": "a simple sequence diagram with actors",
      "content": "sequenceDiagram\nactor Alice\nactor John\nAlice->>John: Hello John, how are you?\nJohn-->>Alice: Great!\nAlice-)John: See you later!",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "8cd9f454-255d-471b-927d-20638c9c9b7c",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "41e0c87b-9a34-4522-ad04-a8d03239d057",
      "category": "ClassDiagram",
      "description": "sample class",
      "content": "class BankAccount\n        BankAccount : +String owner\n        BankAccount : +Bigdecimal balance\n        BankAccount : +deposit(amount)\n        BankAccount : +withdrawal(amount)",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "a033d7eb-6e33-4f2a-a04b-b5bab2f91d42",
      "category": "ClassDiagram",
      "description": "generic class",
      "content": "class Square~Shape~{\n            int id\n            List~int~ position\n            setPoints(List~int~ points)\n            getPoints() List~int~\n        }\n        \n        Square : -List~string~ messages\n        Square : +setMessages(List~string~ messages)\n        Square : +getMessages() List~string~",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "b496bd25-f281-4fb5-ba01-560f2c6eca0c",
      "category": "ClassDiagram",
      "description": "inheritance",
      "content": "classA <|-- classB",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "538c0c7c-fb48-480e-8b4c-7d17513078be",
      "category": "ClassDiagram",
      "description": "composition",
      "content": "classC *-- classD",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "7553d46a-f9b6-4541-b7ff-54719d9f2df8",
      "category": "ClassDiagram",
      "description": "aggregation",
      "content": "classE o-- classF",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "22e5a47a-8111-4094-874d-0cc3267b0fab",
      "category": "ClassDiagram",
      "description": "association",
      "content": "classG <-- classH",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "64d6fb6b-b0a1-4dc5-a88e-445209e5a8a8",
      "category": "ClassDiagram",
      "description": "solid link",
      "content": "classI -- classJ",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "4fd83824-1fe4-435e-9e08-d83961070690",
      "category": "ClassDiagram",
      "description": "dependency",
      "content": "classK <.. classL",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "93df8503-6022-4517-b21d-7c39267e141a",
      "category": "ClassDiagram",
      "description": "realization",
      "content": "classM <|.. classN",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "1d28e526-01cb-43ff-a6bb-6fe3267bd6da",
      "category": "ClassDiagram",
      "description": "dashed link",
      "content": "classO .. classP",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "3c1a959b-f386-4ae9-8de7-98330e62dbe3",
      "category": "ClassDiagram",
      "description": "two-way relation",
      "content": "Animal <|--|> Zebra",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "a26a0380-0ba1-4e87-a72c-03207811f138",
      "category": "ClassDiagram",
      "description": "sample class diagram",
      "content": "classDiagram\n        Animal <|-- Duck\n        Animal <|-- Fish\n        Animal <|-- Zebra\n        Animal : +int age\n        Animal : +String gender\n        Animal: +isMammal()\n        Animal: +mate()\n        class Duck{\n            +String beakColor\n            +swim()\n            +quack()\n        }\n        class Fish{\n            -int sizeInFeet\n            -canEat()\n        }\n        class Zebra{\n            +bool is_wild\n            +run()\n        }",
      "sortingOrder": 12,
      "isPinned": false
    },
    {
      "id": "b0e7b9f7-479f-409e-b987-2e3f46b33ec4",
      "category": "StateDiagram",
      "description": "a sample state diagram",
      "content": "stateDiagram-v2\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "2028fedf-a468-469f-b9ae-54ce71574024",
      "category": "StateDiagram",
      "description": "a sample state diagram with left-to-right direction",
      "content": "stateDiagram-v2\n        direction LR\n        [*] --> Still\n        Still --> [*]\n    \n        Still --> Moving\n        Moving --> Still\n        Moving --> Crash\n        Crash --> [*]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "b510dc8e-8456-4c7d-96e9-dc9f0257dfba",
      "category": "StateDiagram",
      "description": "node with description",
      "content": "s2 : This is a state description",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "fcb99f93-277b-48ab-a3ba-65259ede0edd",
      "category": "StateDiagram",
      "description": "a transition",
      "content": "s1 --> s2",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "f52914af-6da1-47ae-9d87-63214d4ed4f8",
      "category": "StateDiagram",
      "description": "a transition with label",
      "content": "s1 --> s2: A transition",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "e1f9b456-59e4-4f5a-b1c4-3984d5500ba9",
      "category": "StateDiagram",
      "description": "composite state",
      "content": "\n        [*] --> First\n        state First {\n            [*] --> second\n            second --> [*]\n        }",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "6c61e932-744c-40b2-8536-b837e3f2dc1b",
      "category": "StateDiagram",
      "description": "diagram with choice",
      "content": "stateDiagram-v2\n        state if_state <<choice>>\n        [*] --> IsPositive\n        IsPositive --> if_state\n        if_state --> False: if n < 0\n        if_state --> True : if n >= 0",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "16763ad6-0fd2-46e8-92e5-8f86933b0b00",
      "category": "StateDiagram",
      "description": "diagram with fork",
      "content": "stateDiagram-v2\n        state fork_state <<fork>>\n          [*] --> fork_state\n          fork_state --> State2\n          fork_state --> State3\n    \n          state join_state <<join>>\n          State2 --> join_state\n          State3 --> join_state\n          join_state --> State4\n          State4 --> [*]",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "a935e3c1-52f2-4496-9a71-cc5d282e30e8",
      "category": "StateDiagram",
      "description": "a diagram with concurrency",
      "content": "stateDiagram-v2\n        [*] --> Active\n    \n        state Active {\n            [*] --> NumLockOff\n            NumLockOff --> NumLockOn : EvNumLockPressed\n            NumLockOn --> NumLockOff : EvNumLockPressed\n            --\n            [*] --> CapsLockOff\n            CapsLockOff --> CapsLockOn : EvCapsLockPressed\n            CapsLockOn --> CapsLockOff : EvCapsLockPressed\n            --\n            [*] --> ScrollLockOff\n            ScrollLockOff --> ScrollLockOn : EvScrollLockPressed\n            ScrollLockOn --> ScrollLockOff : EvScrollLockPressed\n        }",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "5f253b82-b551-4a78-9157-f7b7bbdc5847",
      "category": "EntityRelationshipDiagram",
      "description": "a sample entity relationship diagram",
      "content": "erDiagram\n        CUSTOMER ||--o{ ORDER : places\n        ORDER ||--|{ LINE-ITEM : contains\n        CUSTOMER }|..|{ DELIVERY-ADDRESS : uses",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "4b028bef-0f76-478c-80a5-6b0ebd5d3a17",
      "category": "EntityRelationshipDiagram",
      "description": "an entity",
      "content": "    CUSTOMER {\n            string name\n            string custNumber\n            string sector\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "49fda4d4-eb14-4de1-b6cf-57f90a3bbe6d",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-many relationship",
      "content": "A ||--|{ B : label",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "ea1515e4-e21f-4563-8239-b2bb346493ad",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-many relationship",
      "content": "A }|--|{ B : label",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "36e444c9-162c-4fe9-8834-c762b2c9a128",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one relationship",
      "content": "A ||--|| B : label",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "e8cd63c8-af82-456c-ab59-2513882fd3b1",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-one relationship",
      "content": "A }|--|| B : label",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "3995c192-43a0-4993-9dbe-16d44662d634",
      "category": "EntityRelationshipDiagram",
      "description": "zero/one-to-one relationship",
      "content": "A |o--|| B : label",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "fa99a29a-544b-4ca0-a71b-fe31ed47933a",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-one/zero relationship",
      "content": "A ||--o| B : label",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "f777ab5b-fda7-44a0-9e1d-c24fd4b56692",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-one relationship",
      "content": "A }o--|| B : label",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "3ae43604-4dca-4356-8afa-3f7e4d50aded",
      "category": "EntityRelationshipDiagram",
      "description": "one-to-zero-or-more relationship",
      "content": "A ||--o{ B : label",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "d9e0bc4f-c9a1-4552-bfd8-860eb68be9b5",
      "category": "EntityRelationshipDiagram",
      "description": "zero-or-more-to-many relationship",
      "content": "A }o--|{ B : label",
      "sortingOrder": 10,
      "isPinned": false
    },
    {
      "id": "0be3af5f-5a0d-46f3-bb75-245274c45aa7",
      "category": "EntityRelationshipDiagram",
      "description": "many-to-zero-or-more relationship",
      "content": "A }|--o{ B : label",
      "sortingOrder": 11,
      "isPinned": false
    },
    {
      "id": "ca1701ba-0638-48e0-8c1a-faa7221ee574",
      "category": "UserJourneyDiagram",
      "description": "a sample user journey diagram",
      "content": "journey\n        title My working day\n        section Go to work\n          Make tea: 5: Me\n          Go upstairs: 3: Me\n          Do work: 1: Me, Cat\n        section Go home\n          Go downstairs: 5: Me\n          Sit down: 5: Me",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "a8957640-3222-49fa-9b01-cc02b24deca2",
      "category": "UserJourneyDiagram",
      "description": "a step in user journey",
      "content": "      Step Title: 5: ActorName",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "1ae207a0-b4cc-4620-95a5-de54e0eb61e1",
      "category": "GanttChart",
      "description": "simple gantt chart",
      "content": "gantt\n        title A Gantt Diagram\n        dateFormat  YYYY-MM-DD\n        section Section\n        A task           :a1, 2014-01-01, 30d\n        Another task     :after a1  , 20d\n        section Another\n        Task in sec      :2014-01-12  , 12d\n        another task      : 24d",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "cb9f12c7-f508-462c-b381-d2835dcea280",
      "category": "GanttChart",
      "description": "rich gantt chart",
      "content": "gantt\n        dateFormat  YYYY-MM-DD\n        title       Adding GANTT diagram functionality to mermaid\n        excludes    weekends\n    \n        section A section\n        Completed task            :done,    des1, 2014-01-06,2014-01-08\n        Active task               :active,  des2, 2014-01-09, 3d\n        Future task               :         des3, after des2, 5d\n        Future task2              :         des4, after des3, 5d\n    \n        section Critical tasks\n        Completed task in the critical line :crit, done, 2014-01-06,24h\n        Implement parser and jison          :crit, done, after des1, 2d\n        Create tests for parser             :crit, active, 3d\n        Future task in critical line        :crit, 5d\n        Create tests for renderer           :2d\n        Add to mermaid                      :1d\n        Functionality added                 :milestone, 2014-01-25, 0d\n    \n        section Documentation\n        Describe gantt syntax               :active, a1, after des1, 3d\n        Add gantt diagram to demo page      :after a1  , 20h\n        Add another diagram to demo page    :doc1, after a1  , 48h\n    \n        section Last section\n        Describe gantt syntax               :after doc1, 3d\n        Add gantt diagram to demo page      :20h\n        Add another diagram to demo page    :48h",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "1b608ff5-604d-443c-a77d-cb08469f3093",
      "category": "GanttChart",
      "description": "milestones example",
      "content": "gantt\n        dateFormat HH:mm\n        axisFormat %H:%M\n        Initial milestone : milestone, m1, 17:49,2min\n        taska2 : 10min\n        taska3 : 5min\n        Final milestone : milestone, m2, 18:14, 2min",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "056d6a40-82ad-4172-861b-cea91f6cd849",
      "category": "PieChart",
      "description": "sample pie chart",
      "content": "pie title /r/obsidianmd posts by type\n        \"Look at my awesome graph\" : 85\n        \"Look at my cool dashboard\" : 14\n        \"Moved from Notion, liking it\" : 1",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "5ad125f9-c8f6-414f-a9bb-3a40dbad4222",
      "category": "PieChart",
      "description": "sample pie chart with values shown in legend",
      "content": "pie showdata\n        title /r/obsidianmd posts by type\n        \"Graphs\" : 85\n        \"Dashboards\" : 14\n        \"Tips\" : 1",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "8070bed4-8c37-41e9-8b3f-830ff95390d7",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "    requirementDiagram\n\n        requirement test_req {\n        id: 1\n        text: the test text.\n        risk: high\n        verifymethod: test\n        }\n    \n        element test_entity {\n        type: simulation\n        }\n    \n        test_entity - satisfies -> test_req",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "72de2eab-0316-4511-b7a9-3a06aff6b7a1",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "element customElement {\n            type: customType\n            docref: customDocRef\n        }",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "e5e0262c-8a13-4218-a5e8-2a2239964215",
      "category": "RequirementDiagram",
      "description": "a requirement with high risk",
      "content": "functionalRequirement myReq {\n            id: reqId\n            text: someText\n            risk: High\n            verifymethod: analysis\n        }",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "97020ead-b0d3-4701-8c8e-8fafbdf74c76",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "interfaceRequirement myReq2 {\n            id: reqId\n            text: someText\n            risk: Medium\n            verifymethod: demonstration\n        }",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "29c4b77b-7a8e-4bb3-8eb2-625495a12d9f",
      "category": "RequirementDiagram",
      "description": "sample requirements diagram",
      "content": "designConstraint myReq3 {\n            id: reqId\n            text: someText\n            risk: Low\n            verifymethod: test\n        }",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "be5716ca-ddce-4e31-b4ea-9efa553a0d6e",
      "category": "GitGraph",
      "description": "simple git graph",
      "content": "gitGraph\n        commit\n        commit\n        branch develop\n        checkout develop\n        commit\n        commit\n        checkout main\n        merge develop\n        commit\n        commit",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "908dd5b6-3084-4df3-8602-37ff887ba0a8",
      "category": "GitGraph",
      "description": "tagged commit",
      "content": "commit id: \"Normal\" tag: \"v1.0.0\"",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "d40988dc-2a17-4ad1-9d8d-ec2d9228a177",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "85d06054-a4b6-4d2b-a4fb-b8b534338007",
      "category": "GitGraph",
      "description": "highlighted commit",
      "content": "commit id: \"Highlight\" type: HIGHLIGHT",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "95e9a25a-7935-4f79-bfe1-e9670c399acd",
      "category": "GitGraph",
      "description": "reverse commit",
      "content": "commit id: \"Reverse\" type: REVERSE",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "075d5b83-0f29-43ba-a23f-3eec5148389d",
      "category": "GitGraph",
      "description": "git graph with cherry-pick",
      "content": "gitGraph\n        commit id: \"ZERO\"\n        branch develop\n        commit id:\"A\"\n        checkout main\n        commit id:\"ONE\"\n        checkout develop\n        commit id:\"B\"\n        checkout main\n        commit id:\"TWO\"\n        cherry-pick id:\"A\"\n        commit id:\"THREE\"\n        checkout develop\n        commit id:\"C\"",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "7c6eef23-8522-4999-b4cd-0436379df190",
      "category": "Mindmap",
      "description": "a simple mindmap",
      "content": "mindmap\n        Root\n            A\n              B\n              C",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "30c385b3-42ad-4bac-9691-ef06ae0d6d57",
      "category": "Mindmap",
      "description": "square",
      "content": "id[I am a square]",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "48637d9b-af14-4646-9ed3-7cac56db5d19",
      "category": "Mindmap",
      "description": "rounded square",
      "content": "id(I am a rounded square)",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "74a6f49e-0bf7-4bb5-bd2a-ac7928eb3477",
      "category": "Mindmap",
      "description": "circle",
      "content": "id((I am a circle))",
      "sortingOrder": 4,
      "isPinned": false
    },
    {
      "id": "91e8f4aa-87fd-46a3-b53e-da73c0666908",
      "category": "Mindmap",
      "description": "bang",
      "content": "id))I am a bang((",
      "sortingOrder": 5,
      "isPinned": false
    },
    {
      "id": "a9070311-3f50-44e2-81e5-6450ed9c9336",
      "category": "Mindmap",
      "description": "cloud",
      "content": "id)I am a cloud(",
      "sortingOrder": 6,
      "isPinned": false
    },
    {
      "id": "5ec793f1-3746-43cb-9b7a-c3334eb2f0c1",
      "category": "Mindmap",
      "description": "hexagon",
      "content": "id{{I am a hexagon}}",
      "sortingOrder": 7,
      "isPinned": false
    },
    {
      "id": "e5be3d2c-6c20-41aa-99a7-09b70e94f704",
      "category": "Mindmap",
      "description": "default",
      "content": "I am the default shape",
      "sortingOrder": 8,
      "isPinned": false
    },
    {
      "id": "9408e80b-f18b-40be-8166-e89c9e90e5b9",
      "category": "Mindmap",
      "description": "sample mindmap",
      "content": "mindmap\n        root((mindmap))\n          Origins\n            Long history\n            Popularisation\n              British popular psychology author Tony Buzan\n          Research\n            On effectiveness<br/>and features\n            On Automatic creation\n              Uses\n                  Creative techniques\n                  Strategic planning\n                  Argument mapping\n          Tools\n            Pen and paper\n            Mermaid",
      "sortingOrder": 9,
      "isPinned": false
    },
    {
      "id": "29ab27a2-b819-4572-9c44-02ebb12675fa",
      "category": "Timeline",
      "description": "sample timeline",
      "content": "timeline\n\t\ttitle History of Social Media Platform\n\t\t2002 : LinkedIn\n\t\t2004 : Facebook\n\t\t\t : Google\n\t\t2005 : Youtube\n\t\t2006 : Twitter",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "1dfdde0f-ef0e-4a62-8e50-e5a3fff264ac",
      "category": "Timeline",
      "description": "timeline with grouping",
      "content": "timeline\n\t\ttitle Timeline of Industrial Revolution\n\t\tsection 17th-20th century\n\t\t\tIndustry 1.0 : Machinery, Water power, Steam <br>power\n\t\t\tIndustry 2.0 : Electricity, Internal combustion engine, Mass production\n\t\t\tIndustry 3.0 : Electronics, Computers, Automation\n\t\tsection 21st century\n\t\t\tIndustry 4.0 : Internet, Robotics, Internet of Things\n\t\t\tIndustry 5.0 : Artificial intelligence, Big data,3D printing",
      "sortingOrder": 2,
      "isPinned": false
    },
    {
      "id": "a2cfede9-fdb1-424b-abb5-b51051b8dec7",
      "category": "Timeline",
      "description": "timeline with Forest theme. see the docs for additional themes",
      "content": "%%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%%\n\t\ttimeline\n\t\t\ttitle History of Social Media Platform\n\t\t\t  2002 : LinkedIn\n\t\t\t  2004 : Facebook : Google\n\t\t\t  2005 : Youtube\n\t\t\t  2006 : Twitter\n\t\t\t  2007 : Tumblr\n\t\t\t  2008 : Instagram\n\t\t\t  2010 : Pinterest",
      "sortingOrder": 3,
      "isPinned": false
    },
    {
      "id": "ae4b43ba-9b7e-4422-b4a2-153e81d22f91",
      "category": "QuadrantChart",
      "description": "sample quadrant chart",
      "content": "quadrantChart\n\t\ttitle Reach and engagement of campaigns\n\t\tx-axis Low Reach --> High Reach\n\t\ty-axis Low Engagement --> High Engagement\n\t\tquadrant-1 We should expand\n\t\tquadrant-2 Need to promote\n\t\tquadrant-3 Re-evaluate\n\t\tquadrant-4 May be improved\n\t\tCampaign A: [0.3, 0.6]\n\t\tCampaign B: [0.45, 0.23]\n\t\tCampaign C: [0.57, 0.69]\n\t\tCampaign D: [0.78, 0.34]\n\t\tCampaign E: [0.40, 0.34]\n\t\tCampaign F: [0.35, 0.78]",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "752e67a6-3d05-45e8-a7dc-80f31e0f6f96",
      "category": "QuadrantChart",
      "description": "themed quadrant chart",
      "content": "%%{init: {\"quadrantChart\": {\"chartWidth\": 400, \"chartHeight\": 400}, \"themeVariables\": {\"quadrant1TextFill\": \"#ff0000\"} }}%%\n\t\tquadrantChart\n\t\t  x-axis Urgent --> Not Urgent\n\t\t  y-axis Not Important --> \"Important ❤\"\n\t\t  quadrant-1 Plan\n\t\t  quadrant-2 Do\n\t\t  quadrant-3 Delegate\n\t\t  quadrant-4 Delete",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "fbfb7947-2a6d-429c-9ae8-ee8a50b46972",
      "category": "C4Diagram",
      "description": "sample C4 diagram (compatible with PlantUML)",
      "content": "C4Context\n\t\ttitle System Context diagram for Internet Banking System\n\t\tEnterprise_Boundary(b0, \"BankBoundary0\") {\n\t\t  Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\")\n\t\t  Person(customerB, \"Banking Customer B\")\n\t\t  Person_Ext(customerC, \"Banking Customer C\", \"desc\")\n  \n\t\t  Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\")\n  \n\t\t  System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\")\n  \n\t\t  Enterprise_Boundary(b1, \"BankBoundary\") {\n  \n\t\t\tSystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\")\n  \n\t\t\tSystem_Boundary(b2, \"BankBoundary2\") {\n\t\t\t  System(SystemA, \"Banking System A\")\n\t\t\t  System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\")\n\t\t\t}\n  \n\t\t\tSystem_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\")\n\t\t\tSystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\")\n  \n\t\t\tBoundary(b3, \"BankBoundary3\", \"boundary\") {\n\t\t\t  SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\")\n\t\t\t  SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\")\n\t\t\t}\n\t\t  }\n\t\t}\n  \n\t\tBiRel(customerA, SystemAA, \"Uses\")\n\t\tBiRel(SystemAA, SystemE, \"Uses\")\n\t\tRel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\")\n\t\tRel(SystemC, customerA, \"Sends e-mails to\")\n  \n\t\tUpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\")\n\t\tUpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\")\n\t\tUpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\")\n\t\tUpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\")\n\t\tUpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\")\n  \n\t\tUpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\")",
      "sortingOrder": 1,
      "isPinned": false
    },
    {
      "id": "e3b5cc8d-5d97-4247-81d8-f4ac11e623ec",
      "category": "SankeyDiagram",
      "description": "",
      "content": "sankey-beta\n        %% source,target,value\n        Electricity grid,Over generation / exports,104.453\n        Electricity grid,Heating and cooling - homes,113.726\n        Electricity grid,H2 conversion,27.14",
      "sortingOrder": 0,
      "isPinned": false
    },
    {
      "id": "d5c00a77-258d-4167-82d8-0f1dd8ad0b2c",
      "category": "XyChart",
      "description": "a sample XYChart diagram",
      "content": "xychart-beta\n        title \"Sales Revenue\"\n        x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]\n        y-axis \"Revenue (in $)\" 4000 --> 11000\n        bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\n        line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]",
      "sortingOrder": 0,
      "isPinned": false
    }
  ],
  "selectedCategory": "ClassDiagram"
}